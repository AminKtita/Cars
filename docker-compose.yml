services:
  mongo:
    image: mongo:latest
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    


  scrapy:
    build:
      context: ./carscraper
      dockerfile: Dockerfile
    container_name: scrapy
    depends_on:
      - mongo
    ports:
      - "8002:8002"
    volumes:
      - ./carscraper:/app
      - /app/.scrapy 
    environment:
      MONGO_URI: "mongodb://mongo:27017"
      MONGO_DATABASE: "scrapy_data"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    depends_on:
      - node-backend
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: ["npm", "run", "dev", "--", "--host"]

  node-backend:
    build:
      context: ./node-backend
      dockerfile: Dockerfile
    container_name: node-backend
    depends_on:
      - mongo
    ports:
      - "8001:8000"
    volumes:
      - ./Uploads:/app/uploads

    environment:
      MONGO_URI: "mongodb://mongo:27017/scraped_data"
      JWT_SECRET: "your_jwt_secret_key"
  


  node-cron:
    build:
      context: ./node-cron-job
      dockerfile: Dockerfile
    container_name: node-cron
    depends_on:
      - scrapy
    restart: always
  recommender:
    build: ./recommender
    container_name: recommender
    ports:
      - "8003:8003"
    depends_on:
      - mongo
    
    command: uvicorn app:app --host 0.0.0.0 --port 8003
    environment:
      - MONGO_URI=mongodb://mongo:27017/scraped_data
    volumes:
      - ./recommender:/app
    
  metabase:
    image: metabase/metabase:latest
    container_name: metabase
    ports:
      - "3000:3000"
    volumes:
      - metabase_data:/metabase.db
    depends_on:
      - mongo
    environment:
      - MB_ENABLE_EMBEDDING=true
      - MB_EMBEDDING_SECRET_KEY=your_secure_jwt_secret_here
      - MB_JWT_SHARED_SECRET=your_shared_secret
      - MB_SITE_URL=http://localhost:5174
      - MB_JWT_ATTRIBUTE=email
      - MB_JWT_GROUP_SYNC=true

      
  admin-dashboard:
    build:
      context: ./admin-dashboard
      dockerfile: Dockerfile
    container_name: admin-dashboard
    ports:
      - "5174:5174"
    volumes:
      - ./admin-dashboard:/app
      - /app/node_modules
    command: ["npm", "run", "dev", "--", "--host"]
    depends_on:
      - metabase
      - node-backend



volumes:
  mongo_data:
  metabase_data:
